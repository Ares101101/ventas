---
import CardP from '../../pages/card-P/CardP.astro';
import {productos} from '../../pages/card-P/productos.js'
const data = await fetch('https://fakestoreapi.com/products').then((response) =>
  response.json()
);
const categoriasUnicas = data.reduce((categorias, producto) => {
  if (!categorias.includes(producto.category)) {
    categorias.push(producto.category);
  }
  return categorias;
}, []);
---
<section id="dialog" style="display: none" class="absolute top-0 z-[1] w-full " >
    <main class="flex w-full h-full text-white relative bg-blue-50">
        <section class="flex h-[540px] w-[100%]">
            <ul class="flex-col w-full max-w-[350px]  overflow-x-auto pl-4 pb-4 pr-4">
            
                {productos.map((product, index)=>(
                    <li class="pb-4">
                        <CardP href={product.producto} title={product.producto}/>
                    </li>
                ))}
            
            </ul>
            <article class="flex flex-col text-[#112b3c] w-full ">
                <div class="flex flex-col h-full w-full justify-around ">
                    {categoriasUnicas.map((producto)=>(
                        <article class="flex flex-col items-center  w-full h-20 cursor-pointer">
                            <div class="p-4 h-full justify-center flex items-center">
                                {producto}
                            </div>
                        </article>
                        ))	
                    }
                </div>				
                <div>
    
                </div>
            </article>	
        </section>
        <div class="w-full flex h-[1px] bg-gradient-to-r from-cyan-500 to-blue-500 absolute bottom-0 ">
        </div>
    </main>
</section>
<script>
import { isOpen } from '../header/store.js';
  
    // Listen to changes in the store, and show/hide the dialog accordingly
    const pro = document.getElementById('dialog');
    isOpen.subscribe(() => {
    
    if (isOpen.value == true) {
      pro.removeEventListener('animationend', handleTransitionEnd);
      pro.classList.remove('productos-style-close');
      pro.style.display = 'block';
      pro.classList.toggle('productos-style');
    } else if (isOpen.value == false) {
      pro.classList.remove('productos-style');
      pro.classList.toggle('productos-style-close');
      pro.addEventListener('animationend', handleTransitionEnd )
    }
  });

  function handleTransitionEnd() {
      pro.style.display = 'none';
  }
</script>
<style>
	#dialog main section ul::-webkit-scrollbar{
		width: 5px;
	}
	#dialog main section ul::-webkit-scrollbar-thumb{
		background-color: #112b3c;
		border-radius: 20px;
	}
  .productos-style{
    animation: appearAnimation 0.4s ease-in-out;
    
}

@keyframes appearAnimation {
    0% {
        opacity: 0;
        transform: translateY(-300px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }

}
.productos-style-close{
    animation: closeAnimation 0.4s ease-in-out;
   
}

@keyframes closeAnimation {
    0% {
        opacity: 1;
        transform: translateY(0);
    }
    100% {
        opacity: 0;
        transform: translateY(-500px);
        
    }
    
}

</style>